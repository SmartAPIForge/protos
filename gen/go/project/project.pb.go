// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.28.2
// source: project/project.proto

package codegen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProjectStatus int32

const (
	ProjectStatus_NEW              ProjectStatus = 0
	ProjectStatus_GENERATE_PENDING ProjectStatus = 2
	ProjectStatus_GENERATE_SUCCESS ProjectStatus = 3
	ProjectStatus_GENERATE_FAIL    ProjectStatus = 4
	ProjectStatus_DEPLOY_PENDING   ProjectStatus = 5
	ProjectStatus_DEPLOY_SUCCESS   ProjectStatus = 6
	ProjectStatus_DEPLOY_FAIL      ProjectStatus = 7
	ProjectStatus_RUNNING          ProjectStatus = 8
	ProjectStatus_STOPPED          ProjectStatus = 9
	ProjectStatus_FAILED           ProjectStatus = 10
)

// Enum value maps for ProjectStatus.
var (
	ProjectStatus_name = map[int32]string{
		0:  "NEW",
		2:  "GENERATE_PENDING",
		3:  "GENERATE_SUCCESS",
		4:  "GENERATE_FAIL",
		5:  "DEPLOY_PENDING",
		6:  "DEPLOY_SUCCESS",
		7:  "DEPLOY_FAIL",
		8:  "RUNNING",
		9:  "STOPPED",
		10: "FAILED",
	}
	ProjectStatus_value = map[string]int32{
		"NEW":              0,
		"GENERATE_PENDING": 2,
		"GENERATE_SUCCESS": 3,
		"GENERATE_FAIL":    4,
		"DEPLOY_PENDING":   5,
		"DEPLOY_SUCCESS":   6,
		"DEPLOY_FAIL":      7,
		"RUNNING":          8,
		"STOPPED":          9,
		"FAILED":           10,
	}
)

func (x ProjectStatus) Enum() *ProjectStatus {
	p := new(ProjectStatus)
	*p = x
	return p
}

func (x ProjectStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProjectStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_project_project_proto_enumTypes[0].Descriptor()
}

func (ProjectStatus) Type() protoreflect.EnumType {
	return &file_project_project_proto_enumTypes[0]
}

func (x ProjectStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProjectStatus.Descriptor instead.
func (ProjectStatus) EnumDescriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{0}
}

type Owner struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         string                 `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Owner) Reset() {
	*x = Owner{}
	mi := &file_project_project_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Owner) ProtoMessage() {}

func (x *Owner) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Owner.ProtoReflect.Descriptor instead.
func (*Owner) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{0}
}

func (x *Owner) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

type GetAllUserProjectsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         string                 `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Page          string                 `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`   // current page
	Limit         string                 `protobuf:"bytes,3,opt,name=limit,proto3" json:"limit,omitempty"` // projects per page
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllUserProjectsRequest) Reset() {
	*x = GetAllUserProjectsRequest{}
	mi := &file_project_project_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllUserProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUserProjectsRequest) ProtoMessage() {}

func (x *GetAllUserProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUserProjectsRequest.ProtoReflect.Descriptor instead.
func (*GetAllUserProjectsRequest) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{1}
}

func (x *GetAllUserProjectsRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GetAllUserProjectsRequest) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *GetAllUserProjectsRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

type ProjectUniqueIdentifier struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         string                 `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectUniqueIdentifier) Reset() {
	*x = ProjectUniqueIdentifier{}
	mi := &file_project_project_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectUniqueIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectUniqueIdentifier) ProtoMessage() {}

func (x *ProjectUniqueIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectUniqueIdentifier.ProtoReflect.Descriptor instead.
func (*ProjectUniqueIdentifier) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectUniqueIdentifier) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ProjectUniqueIdentifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type InitProjectRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	ComposeId     *ProjectUniqueIdentifier `protobuf:"bytes,1,opt,name=composeId,proto3" json:"composeId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitProjectRequest) Reset() {
	*x = InitProjectRequest{}
	mi := &file_project_project_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitProjectRequest) ProtoMessage() {}

func (x *InitProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitProjectRequest.ProtoReflect.Descriptor instead.
func (*InitProjectRequest) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{3}
}

func (x *InitProjectRequest) GetComposeId() *ProjectUniqueIdentifier {
	if x != nil {
		return x.ComposeId
	}
	return nil
}

type UpdateProjectRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	ComposeId     *ProjectUniqueIdentifier `protobuf:"bytes,1,opt,name=composeId,proto3" json:"composeId,omitempty"`
	Data          string                   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProjectRequest) Reset() {
	*x = UpdateProjectRequest{}
	mi := &file_project_project_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRequest) ProtoMessage() {}

func (x *UpdateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateProjectRequest) GetComposeId() *ProjectUniqueIdentifier {
	if x != nil {
		return x.ComposeId
	}
	return nil
}

func (x *UpdateProjectRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ProjectInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          string                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Status        ProjectStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=project.ProjectStatus" json:"status,omitempty"`
	UrlZip        string                 `protobuf:"bytes,3,opt,name=urlZip,proto3" json:"urlZip,omitempty"`
	UrlDeploy     string                 `protobuf:"bytes,4,opt,name=urlDeploy,proto3" json:"urlDeploy,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectInfo) Reset() {
	*x = ProjectInfo{}
	mi := &file_project_project_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectInfo) ProtoMessage() {}

func (x *ProjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectInfo.ProtoReflect.Descriptor instead.
func (*ProjectInfo) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{5}
}

func (x *ProjectInfo) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ProjectInfo) GetStatus() ProjectStatus {
	if x != nil {
		return x.Status
	}
	return ProjectStatus_NEW
}

func (x *ProjectInfo) GetUrlZip() string {
	if x != nil {
		return x.UrlZip
	}
	return ""
}

func (x *ProjectInfo) GetUrlDeploy() string {
	if x != nil {
		return x.UrlDeploy
	}
	return ""
}

func (x *ProjectInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ProjectInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type ProjectResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	ComposeId     *ProjectUniqueIdentifier `protobuf:"bytes,1,opt,name=composeId,proto3" json:"composeId,omitempty"`
	Info          *ProjectInfo             `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectResponse) Reset() {
	*x = ProjectResponse{}
	mi := &file_project_project_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectResponse) ProtoMessage() {}

func (x *ProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectResponse.ProtoReflect.Descriptor instead.
func (*ProjectResponse) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{6}
}

func (x *ProjectResponse) GetComposeId() *ProjectUniqueIdentifier {
	if x != nil {
		return x.ComposeId
	}
	return nil
}

func (x *ProjectResponse) GetInfo() *ProjectInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type ListOfProjectsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Projects      []*ProjectResponse     `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOfProjectsResponse) Reset() {
	*x = ListOfProjectsResponse{}
	mi := &file_project_project_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfProjectsResponse) ProtoMessage() {}

func (x *ListOfProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfProjectsResponse.ProtoReflect.Descriptor instead.
func (*ListOfProjectsResponse) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{7}
}

func (x *ListOfProjectsResponse) GetProjects() []*ProjectResponse {
	if x != nil {
		return x.Projects
	}
	return nil
}

var File_project_project_proto protoreflect.FileDescriptor

var file_project_project_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0x1d, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22,
	0x5b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x43, 0x0a, 0x17,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x54, 0x0a, 0x12, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x73, 0x65, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3e, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xc3, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x72, 0x6c, 0x5a, 0x69,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x72, 0x6c, 0x5a, 0x69, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x72, 0x6c, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x72, 0x6c, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x7b, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x4e, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2a, 0xb6, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x45, 0x57, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x45, 0x4e, 0x45, 0x52,
	0x41, 0x54, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x11, 0x0a,
	0x0d, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x04,
	0x12, 0x12, 0x0a, 0x0e, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x45, 0x50, 0x4c,
	0x4f, 0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45,
	0x44, 0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x0a, 0x32,
	0xc4, 0x02, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x19, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x49, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x10, 0x5a, 0x0e, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_project_project_proto_rawDescOnce sync.Once
	file_project_project_proto_rawDescData = file_project_project_proto_rawDesc
)

func file_project_project_proto_rawDescGZIP() []byte {
	file_project_project_proto_rawDescOnce.Do(func() {
		file_project_project_proto_rawDescData = protoimpl.X.CompressGZIP(file_project_project_proto_rawDescData)
	})
	return file_project_project_proto_rawDescData
}

var file_project_project_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_project_project_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_project_project_proto_goTypes = []any{
	(ProjectStatus)(0),                // 0: project.ProjectStatus
	(*Owner)(nil),                     // 1: project.Owner
	(*GetAllUserProjectsRequest)(nil), // 2: project.GetAllUserProjectsRequest
	(*ProjectUniqueIdentifier)(nil),   // 3: project.ProjectUniqueIdentifier
	(*InitProjectRequest)(nil),        // 4: project.InitProjectRequest
	(*UpdateProjectRequest)(nil),      // 5: project.UpdateProjectRequest
	(*ProjectInfo)(nil),               // 6: project.ProjectInfo
	(*ProjectResponse)(nil),           // 7: project.ProjectResponse
	(*ListOfProjectsResponse)(nil),    // 8: project.ListOfProjectsResponse
}
var file_project_project_proto_depIdxs = []int32{
	3,  // 0: project.InitProjectRequest.composeId:type_name -> project.ProjectUniqueIdentifier
	3,  // 1: project.UpdateProjectRequest.composeId:type_name -> project.ProjectUniqueIdentifier
	0,  // 2: project.ProjectInfo.status:type_name -> project.ProjectStatus
	3,  // 3: project.ProjectResponse.composeId:type_name -> project.ProjectUniqueIdentifier
	6,  // 4: project.ProjectResponse.info:type_name -> project.ProjectInfo
	7,  // 5: project.ListOfProjectsResponse.projects:type_name -> project.ProjectResponse
	2,  // 6: project.ProjectService.GetAllUserProjects:input_type -> project.GetAllUserProjectsRequest
	1,  // 7: project.ProjectService.StreamUserProjectsUpdates:input_type -> project.Owner
	4,  // 8: project.ProjectService.InitProject:input_type -> project.InitProjectRequest
	5,  // 9: project.ProjectService.UpdateProject:input_type -> project.UpdateProjectRequest
	8,  // 10: project.ProjectService.GetAllUserProjects:output_type -> project.ListOfProjectsResponse
	7,  // 11: project.ProjectService.StreamUserProjectsUpdates:output_type -> project.ProjectResponse
	7,  // 12: project.ProjectService.InitProject:output_type -> project.ProjectResponse
	7,  // 13: project.ProjectService.UpdateProject:output_type -> project.ProjectResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_project_project_proto_init() }
func file_project_project_proto_init() {
	if File_project_project_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_project_project_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_project_project_proto_goTypes,
		DependencyIndexes: file_project_project_proto_depIdxs,
		EnumInfos:         file_project_project_proto_enumTypes,
		MessageInfos:      file_project_project_proto_msgTypes,
	}.Build()
	File_project_project_proto = out.File
	file_project_project_proto_rawDesc = nil
	file_project_project_proto_goTypes = nil
	file_project_project_proto_depIdxs = nil
}
